INT int
ID getprod
LPAREN (
INT int
ID i
COMMA ,
INT int
STAR *
ID arr
RPAREN )
LBRACE {
INT int
ID returnvalue
BECOMES =
NUM 0
SEMI ;
IF if
LPAREN (
ID i
LE <=
NUM 1
RPAREN )
LBRACE {
ID returnvalue
BECOMES =
NUM 1
SEMI ;
RBRACE }
ELSE else
LBRACE {
ID returnvalue
BECOMES =
ID i
PLUS +
ID getprod
LPAREN (
ID i
MINUS -
NUM 1
COMMA ,
ID arr
RPAREN )
SEMI ;
RBRACE }
PRINTLN println
LPAREN (
ID returnvalue
RPAREN )
SEMI ;
RETURN return
ID returnvalue
SEMI ;
RBRACE }
INT int
WAIN wain
LPAREN (
INT int
ID a
COMMA ,
INT int
ID b
RPAREN )
LBRACE {
INT int
ID count
BECOMES =
NUM 0
SEMI ;
INT int
ID i
BECOMES =
NUM 0
SEMI ;
INT int
STAR *
ID arr
BECOMES =
NULL NULL
SEMI ;
ID count
BECOMES =
ID getprod
LPAREN (
ID a
COMMA ,
ID arr
RPAREN )
SEMI ;
ID arr
BECOMES =
NEW new
INT int
LBRACK [
NUM 10
RBRACK ]
SEMI ;
WHILE while
LPAREN (
ID i
LT <
NUM 10
RPAREN )
LBRACE {
STAR *
LPAREN (
ID arr
PLUS +
ID i
RPAREN )
BECOMES =
ID i
SEMI ;
ID i
BECOMES =
ID i
PLUS +
NUM 1
SEMI ;
RBRACE }
ID i
BECOMES =
NUM 0
SEMI ;
WHILE while
LPAREN (
ID i
LT <
NUM 10
RPAREN )
LBRACE {
PRINTLN println
LPAREN (
STAR *
LPAREN (
ID arr
PLUS +
ID i
RPAREN )
RPAREN )
SEMI ;
ID i
BECOMES =
ID i
PLUS +
NUM 2
SEMI ;
RBRACE }
PRINTLN println
LPAREN (
ID getprod
LPAREN (
ID a
COMMA ,
ID arr
RPAREN )
RPAREN )
SEMI ;
RETURN return
ID count
SEMI ;
RBRACE }
