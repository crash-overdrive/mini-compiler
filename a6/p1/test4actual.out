ID in
LPAREN (
INT int
ID a
COMMA ,
INT int
ID b
RPAREN )
LBRACE {
WHILE while
LPAREN (
ID a
GT >
ID b
RPAREN )
LBRACE {
ID a
BECOMES =
ID a
MINUS -
NUM 1
SEMI ;
RBRACE }
RETURN return
ID a
SEMI ;
RBRACE }
INT int
WAIN wain
LPAREN (
INT int
STAR *
ID array
COMMA ,
INT int
ID size
RPAREN )
LBRACE {
INT int
STAR *
ID copy
BECOMES =
NULL NULL
SEMI ;
INT int
ID i
BECOMES =
NUM 0
SEMI ;
INT int
ID j
BECOMES =
NUM 0
SEMI ;
INT int
ID t
BECOMES =
NUM 0
SEMI ;
INT int
ID k
BECOMES =
NUM 0
SEMI ;
INT int
ID sum
BECOMES =
NUM 0
SEMI ;
ID copy
BECOMES =
NEW new
INT int
LBRACK [
ID size
RBRACK ]
SEMI ;
ID i
BECOMES =
NUM 0
SEMI ;
WHILE while
LPAREN (
ID i
LT <
ID size
RPAREN )
LBRACE {
ID sum
BECOMES =
ID sum
PLUS +
STAR *
LPAREN (
ID array
PLUS +
ID i
RPAREN )
SEMI ;
STAR *
LPAREN (
ID copy
PLUS +
ID i
RPAREN )
BECOMES =
STAR *
LPAREN (
ID array
PLUS +
ID i
RPAREN )
SEMI ;
ID i
BECOMES =
ID i
PLUS +
NUM 1
SEMI ;
RBRACE }
ID k
BECOMES =
NUM 0
SEMI ;
WHILE while
LPAREN (
ID k
LT <
ID size
RPAREN )
LBRACE {
ID i
BECOMES =
NUM 0
SEMI ;
WHILE while
LPAREN (
ID i
LT <
ID size
MINUS -
NUM 1
RPAREN )
LBRACE {
ID j
BECOMES =
ID i
PLUS +
NUM 1
SEMI ;
IF if
LPAREN (
STAR *
LPAREN (
ID array
PLUS +
ID i
RPAREN )
GT >
STAR *
LPAREN (
ID array
PLUS +
ID j
RPAREN )
RPAREN )
LBRACE {
ID t
BECOMES =
STAR *
LPAREN (
ID array
PLUS +
ID i
RPAREN )
SEMI ;
